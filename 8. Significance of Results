library(forecast)
library(MCS)

# Forecast errors
arima_errors <- test_ts - ts(arima_forecasts_exp, start = c(2023, 5), frequency = 24)
sarima_errors <- test_ts - ts(sarima_forecasts_exp, start = c(2023, 5), frequency = 24)
ets_errors <- test_ts - ts(ets_forecasts_exp, start = c(2023, 5), frequency = 24)

# Compare ARIMA vs SARIMA
dm_arima_sarima <- dm.test(arima_errors, sarima_errors, alternative = "two.sided")
# Compare ARIMA vs ETS
dm_arima_ets <- dm.test(arima_errors, ets_errors, alternative = "two.sided")
# Compare SARIMA vs ETS
dm_sarima_ets <- dm.test(sarima_errors, ets_errors, alternative = "two.sided")

print(dm_arima_sarima)
print(dm_arima_ets)
print(dm_sarima_ets)

# Define the loss matrix
loss_matrix <- cbind(
  arima = (arima_errors)^2,
  sarima = (sarima_errors)^2,
  ets = (ets_errors)^2
)

# Apply the MCS procedure
mcs_results <- MCSprocedure(Loss = loss_matrix, alpha = 0.05, B = 1000)

under_penalty=5
over_penalty=1

arima_asymmetric <- ifelse(arima_errors < 0, abs(arima_errors) * under_penalty, abs(arima_errors) * over_penalty)
sarima_asymmetric <- ifelse(sarima_errors < 0, abs(sarima_errors) * under_penalty, abs(sarima_errors) * over_penalty)
ets_asymmetric <- ifelse(ets_errors < 0, abs(ets_errors) * under_penalty, abs(ets_errors) * over_penalty)

loss_matrix_asymmetric <- cbind(
  arima = arima_asymmetric,
  sarima = sarima_asymmetric,
  ets = ets_asymmetric
)

mcs_results_asymmetric <- MCSprocedure(Loss = loss_matrix_asymmetric, alpha = 0.05, B = 1000, statistic = "Tmax")
